name: Continuous Integration
permissions:
  contents: write
  pages: write

on:
  push:
    branches:
      - main
      - v2
      - "feat-*"
    paths:
      - .github/workflows/ci.yml
      - __fixtures__/**
      - __tests__/**
      - src/**
      - .node-version
      - .prettierrc
      - .yaml-lint.yml
      - test.env
      - jest.config.js
      - package.json
      - package-lock.json
      - eslint.config.mjs
      - action.yml
  pull_request:
    branches:
      - main
      - v2

env:
  BADGES_BRANCH: 'badges'
  REF_NAME: ${{ github.ref_name }}
  REF_TYPE: ${{ github.ref_type }}
  BRANCH_NAME: ${{ ( github.ref_type == 'branch' && github.ref_name ) || '' }}
  TAG_NAME: ${{ ( github.ref_type == 'tag' && github.ref_name ) || '' }}
  build_status_message: "not set"
  build_status_color: "#000000"

jobs:
  test-javascript:
    name: Unit Tests (jest)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - run: echo "build_status_message=FAIL" >> $GITHUB_ENV
      - run: echo "build_status_color=9e1010" >> $GITHUB_ENV

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-test-ci
        run: npm run test-ci

      - if: success()
        run: echo "build_status_message=PASS" >> $GITHUB_ENV
      - if: success()
        run: echo "build_status_color=209215" >> $GITHUB_ENV

      - id: make-badges-dir
        run: mkdir badges
        if: always()
      - id: make-coverage-badge
        if: ${{ always() && (env.BRANCH_NAME == 'main' || env.BRANCH_NAME == 'v2') }}
        run: npx make-coverage-badge --output-path badges/coverage_${{ env.BRANCH_NAME }}.svg
      - id: make-badges-buildstatus
        if: ${{ always() && (env.BRANCH_NAME == 'main' || env.BRANCH_NAME == 'v2') }}
        run: npx badge 'CI Status (${{ env.BRANCH_NAME }})' '${{ env.build_status_message }}' '#${{ env.build_status_color }}' grey @plastic > badges/status_${{ env.BRANCH_NAME }}.svg

      - name: Github Pages Deploy
        uses: peaceiris/actions-gh-pages@v4.0.0
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./badges
          keep_files: true


  test-execution-of-src:
    name: src Smoke Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Test Action
        id: test-action
        uses: ./
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          username: "CI Test"
          severity: "info"
          flags: SuppressNotifications

      - name: Print Output
        id: output
        run: echo "OUTPUT\n${{ steps.test-action.outputs }}"
